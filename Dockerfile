# Dockerfile for Debian + VS Code Server + GitHub CLI
# Generated by Copilot (GPT-4), 2025-08-30
# Security-hardened version using stable Debian base image
FROM debian:stable-slim

ENV DEBIAN_FRONTEND=noninteractive
# Install minimal dependencies with security updates
RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get install -y --no-install-recommends \
        curl wget sudo git openssh-client ca-certificates gpg bash coreutils \
        unattended-upgrades apt-listchanges && \
    unattended-upgrade && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Create a non-root user for development
RUN useradd -ms /bin/bash devuser && echo "devuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
USER devuser
WORKDIR /home/devuser

# Install official VS Code from Microsoft apt repo (provides the 'code' CLI)
RUN curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --batch --yes --dearmor -o /usr/share/keyrings/microsoft.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null && \
    sudo apt-get update && sudo apt-get install -y --no-install-recommends code && \
    sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# (Microsoft GPG key added above)

# Install GitHub CLI
RUN type -p curl >/dev/null || sudo apt install curl -y && \
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && \
    sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null && \
    sudo apt update && sudo apt install -y --no-install-recommends gh && \
    sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# Install Node.js 22 for building the VS Code extension
RUN curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash - && \
    sudo apt-get install -y nodejs && \
    sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# Switch back to root for npm operations that need global access
USER root

# Update npm globally and fix security vulnerabilities
RUN npm install -g npm@latest && \
    npm cache clean --force

# Install secure versions of commonly vulnerable packages globally to override bundled versions
RUN npm install -g handlebars@^4.7.7 ini@^1.3.6 grunt@^1.5.3 diff@^3.5.0 || true

# Switch back to devuser
USER devuser

# Copy and build the VS Code Container Updater extension
COPY --chown=devuser:devuser vscode-container-updater/ /home/devuser/vscode-container-updater/
WORKDIR /home/devuser/vscode-container-updater

# Install additional tools for package security fixes
RUN sudo apt-get update && sudo apt-get install -y --no-install-recommends jq python3 && \
    sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/*

# Create npm audit override config for security
RUN npm config set audit-level high

# Build the extension with security fixes
RUN npm install && npm audit fix --force

# Install security-patched versions of vulnerable packages directly
RUN npm install handlebars@^4.7.7 ini@^1.3.6 grunt@^1.5.3 diff@^3.5.0 pug@^3.0.3 --save || true

# Force update package-lock.json with secure versions
RUN npm update --package-lock-only

# Rebuild and compile with security updates
RUN npm install && npm run compile

# Install vsce locally and package the extension
RUN npm install @vscode/vsce && npx @vscode/vsce package --out vscode-container-updater-updated.vsix

# Clean up build artifacts but keep the extension files
RUN rm -rf node_modules && npm cache clean --force

# Return to home directory
WORKDIR /home/devuser

# Expose VS Code tunnel default port (8080 is not strictly required for tunnel, but kept for compatibility)
EXPOSE 8080

# Copy entrypoint script that handles gh auth and starts the VS Code tunnel
COPY --chown=devuser:devuser scripts/vscode-tunnel-entrypoint.sh /home/devuser/vscode-tunnel-entrypoint.sh
RUN chmod +x /home/devuser/vscode-tunnel-entrypoint.sh

# Generated by Copilot (GPT-4), 2025-08-29
# Use a simple entrypoint that first logs into gh using GH_TOKEN/GITHUB_TOKEN if provided,
# then launches the VS Code tunnel with the same behavior as before.
ENTRYPOINT ["/home/devuser/vscode-tunnel-entrypoint.sh"]
