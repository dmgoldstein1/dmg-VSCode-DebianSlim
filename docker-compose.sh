#!/bin/bash
# Generated by Copilot (GPT-4o), 2025-09-11
# This script automates the testing workflow for the VS Code container using docker-compose.test.yml.
# It builds and starts the containers, prints the security token for VS Code authentication,
# displays the vscode.dev URL, and runs the defined test services (test-runner, security-scanner).
# Future developers: Ensure docker and docker-compose are installed. Run this script from the project root.

set -e

COMPOSE_FILE="docker-compose.test.yml"
VS_CODE_CONTAINER="vscode-test-container"
SECURITY_SCANNER="security-scanner"
TEST_RUNNER="test-runner"

# Step 1: Build and start containers
printf "\n[1/5] Building and starting containers...\n"
docker-compose -f "$COMPOSE_FILE" up -d --build

# Step 2: Wait for VS Code container to become healthy
printf "\n[2/5] Waiting for VS Code container to become healthy...\n"
HEALTH_STATUS=""
for i in {1..20}; do
  HEALTH_STATUS=$(docker inspect --format='{{.State.Health.Status}}' "$VS_CODE_CONTAINER" 2>/dev/null || echo "unknown")
  if [ "$HEALTH_STATUS" == "healthy" ]; then
    printf "VS Code container is healthy.\n"
    break
  fi
  sleep 5
done
if [ "$HEALTH_STATUS" != "healthy" ]; then
  echo "Error: VS Code container did not become healthy."
  echo "--- Container logs (last 40 lines) ---"
  docker logs "$VS_CODE_CONTAINER" | tail -40
  echo "--- End of logs ---"
  DEVICE_CODE=$(docker logs "$VS_CODE_CONTAINER" 2>&1 | grep -Eo '[A-Z0-9]{4}-[A-Z0-9]{4}' | head -n1)
  if [ -n "$DEVICE_CODE" ]; then
    echo "To authenticate, go to https://github.com/login/device and enter code: $DEVICE_CODE"
    read -p "Press Enter after you have authenticated with GitHub..."
  fi
  echo "Troubleshooting: Check healthcheck endpoint, container logs, and authentication status."
  exit 1
fi

# Step 3: Print security token (if available)
printf "\n[3/5] Extracting security token from container logs...\n"
SECURITY_TOKEN=$(docker logs "$VS_CODE_CONTAINER" 2>&1 | grep -Eo 'token=[A-Za-z0-9]+' | head -n1)
if [ -n "$SECURITY_TOKEN" ]; then
  echo "Security token: $SECURITY_TOKEN"
else
  echo "Security token not found in logs."
  echo "If you see a device code above, use it to authenticate."
fi

# Step 4: Display vscode.dev URL
printf "\n[4/5] Displaying vscode.dev URL...\n"
PORT=8080
VSCODE_URL="https://vscode.dev/tunnel/test_tunnel_ci"
echo "Access your VS Code instance at: $VSCODE_URL (port $PORT)"

# Step 5: Run test services
printf "\n[5/5] Running test services...\n"

echo "Running integration tests (test-runner)..."
docker-compose -f "$COMPOSE_FILE" run --rm "$TEST_RUNNER"

echo "Running security scan (security-scanner)..."
docker-compose -f "$COMPOSE_FILE" run --rm "$SECURITY_SCANNER"

printf "\nAll steps completed. Check logs/ for detailed results.\n"
echo "--- VS Code container logs (last 40 lines) ---"
docker logs "$VS_CODE_CONTAINER" | tail -40
echo "--- End of logs ---"
