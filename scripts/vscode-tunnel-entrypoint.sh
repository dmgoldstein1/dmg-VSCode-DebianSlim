#!/usr/bin/env bash

# Generated by Copilot (GPT-4), 2025-08-29
# Description: Entrypoint for the VS Code Server container. If GH_TOKEN or
# GITHUB_TOKEN is provided, it authenticates the GitHub CLI non-interactively
# and sets up git credentials, then launches the VS Code tunnel with the same
# behavior as the previous Dockerfile CMD. Logs are written to ~/LOGS.

set -euo pipefail

VERBOSE="${VERBOSE:-false}"
SKIP_TUNNEL="${SKIP_TUNNEL:-false}"
LOG_DIR="$HOME/LOGS"
mkdir -p "$LOG_DIR"
TS="$(date +%s)"
LOG_FILE="$LOG_DIR/entrypoint-log-$TS.log"

log() {
  echo "[$(date -u +%Y-%m-%dT%H:%M:%SZ)] $*" | tee -a "$LOG_FILE"
}

vlog() {
  if [[ "$VERBOSE" == "true" ]]; then
    log "[VERBOSE] $*"
  fi
}

# 1) Authenticate GitHub CLI if token provided
TOKEN="${GH_TOKEN:-${GITHUB_TOKEN:-}}"
if [[ -n "${TOKEN}" ]]; then
  if command -v gh >/dev/null 2>&1; then
    vlog "Detected GH token in environment; attempting non-interactive gh auth login."
    # gh expects the token on stdin when using --with-token
    if echo -n "$TOKEN" | gh auth login --with-token >>"$LOG_FILE" 2>&1; then
      log "gh auth login succeeded."
      # Configure git to use gh's credential helper
      if gh auth setup-git >>"$LOG_FILE" 2>&1; then
        vlog "gh auth setup-git completed."
      else
        log "Warning: gh auth setup-git failed (see log)."
      fi
    else
      log "Warning: gh auth login failed (see log)."
    fi
  else
    log "Warning: gh CLI not found in PATH; skipping GitHub authentication."
  fi
else
  vlog "No GH_TOKEN/GITHUB_TOKEN provided; skipping gh auth."
fi

# 2) Optional git identity configuration
if [[ -n "${GIT_USER_NAME:-}" && -n "${GIT_USER_EMAIL:-}" ]]; then
  vlog "Configuring git identity from env vars."
  git config --global user.name "${GIT_USER_NAME}"
  git config --global user.email "${GIT_USER_EMAIL}"
fi

# 3) Launch VS Code tunnel (same semantics as previous Dockerfile CMD)
#    Allow tests to skip tunnel startup via SKIP_TUNNEL=true.
if [[ "$SKIP_TUNNEL" == "true" ]]; then
  log "SKIP_TUNNEL=true set; skipping VS Code tunnel startup."
  exit 0
fi
CODE_CLI="/usr/share/code/bin/code"
if [[ ! -x "$CODE_CLI" && -x "$(command -v code || true)" ]]; then
  CODE_CLI="$(command -v code)"
fi

if [[ ! -x "$CODE_CLI" ]]; then
  log "Error: VS Code CLI not found. Expected at /usr/share/code/bin/code or in PATH."
  exit 1
fi

TUNNEL_NAME="${TUNNEL_NAME:-}"
vlog "Starting VS Code tunnel (name='${TUNNEL_NAME}')."

if [[ -n "$TUNNEL_NAME" ]]; then
  exec "$CODE_CLI" tunnel --accept-server-license-terms --log info --name "$TUNNEL_NAME"
else
  exec "$CODE_CLI" tunnel --accept-server-license-terms --log info
fi
